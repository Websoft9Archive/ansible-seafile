- name: Delete seafile dir for sec_installation
  shell: rm -rf /data/wwwroot seafile
    
- name: Clone seafile in Websoft9 
  git:
    repo: "{{seafile_git_url}}"
    dest: "/data/wwwroot/seafile"

- name: Create dir for seafile
  file: 
    state: directory
    path: "{{item}}"
  loop: 
    - /data/wwwroot/seafile/volumes
    - /data/db/mariadb
    - /data/db/elasticsearch
    
- name: Rename compose and env filename and Run docker-compose 
  shell: | 
    [ -f docker-compose-{{seafile_distribution}}.yml ] && mv docker-compose-{{seafile_distribution}}.yml docker-compose.yml
    docker-compose up -d
    sleep 30
  args:
    chdir: /data/wwwroot/seafile

- name: Copy OnlyOffice Document Server connection template
  copy: 
    src: connect-onlyoffice.conf
    dest: /data/wwwroot/seafile/connect-onlyoffice.conf

- name: Create ssl directory for user's CA
  file:
    path: /data/wwwroot/seafile/volumes/seafile_data/ssl
    state: directory

- name: Set soft link for seafile
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
    force: yes
  with_items:
  - {src: /data/wwwroot/seafile/volumes/mysql_data/,dest: /data/db/mariadb/data}
  - {src: /data/wwwroot/seafile/volumes/seafile_data/seafile/logs/,dest: /data/logs/seafile}
  - {src: /data/wwwroot/seafile/volumes/seafile_data/seafile/conf/,dest: /data/config/seafile}
  - {src: /data/wwwroot/seafile/volumes/elasticsearch_data/,dest: /data/db/elasticsearch/data}

# check service and version
- name: Check seafile service 
  shell: docker ps |grep -w seafile
  register: check_seafile_service
  notify: check_seafile_service
    
- name: Check seafile version
  shell: >
    sudo echo "seafile version:" $(docker inspect seafile |grep -i seafile_version |cut -d= -f2) |sudo tee -a /data/logs/install_version.txt  

- name: Check mariadb version
  shell: >
    sudo echo "mariadb version:" $(docker images |grep mariadb |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  

- name: Check memcached version
  shell: >
    sudo echo "memcached version:" $(docker images |grep memcached |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  

- name: Check elasticsearch version
  shell: >
    sudo echo "elasticsearch version:" $(docker images |grep elasticsearch |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt 
  when: seafile_distribution == "enterprise"




